<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMkAAABNCAYAAAAM50DLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAZ
        1gAAGdYBGNHK7QAAGidJREFUeF7tXWdwXFWW3j87M7vM7EzNVm2o3drama2Zrdmp2qrdnWGAGRjAOeGE
        M8YBsAk22BgzBky2MTbO2cY5gw2O2JZkS3KQc5At55wtqbulbqnf6+6Xvj3ndjdI3fd1lrGt91WdgkK3
        r8S997sn3HNO/xUcOHCQEA5JHDhIAockDhwkgUMSBw6SwCGJAwdJ4JDEgYMkcEjiwEESOCRx4CAJHJI4
        cJAEDkkcOEiCBiGJaQEh3UJAA6oUC8evGdh6TMeX+zQs2aVh8U4Nq/ZqKCjTceK6iSq/BZXGagZg0Wcd
        OLibkFOSqCELt6pN7DlnYEZBEC8tUNFsTC2eHO1PKK3HKXhlkYr5xRqOXjFQ4bOgE2Ec3B+o1RTc9FfE
        SaXqQcig2/EuR05IwuQ4cd3AyhJNHPYWn8rJkIq0pM8OXxHA5qMarrhM6Gbklzi4Z5F/tQT9tr0dJ+/t
        m4rz1Vcio+5eZEUSNqtO3zQxMz+IfnMUNBmdXGukKk0/qcXQpQF8fVBDuddhyr2MFWc34XerOsdJz7xh
        KHWdiYy6e5ExSWoDFtbSAR68OIBmn8gPei6k4yQFo9cFiIwGDIcr9yQaJUnYZ5iSF0TnyX40aUCCRKXl
        WD9eWajgwAXdIco9iEZHktteC59uDIqDKzvQMmlKROo4WcGA+QqGLFXJjFIxYJ6C9uMV6XiZ8Bzdpqko
        veqw5F5DoyLJ7WoT764OSA9xXWlOzvdT42vx0ddB7DijixCvDBzuvVVtYeNhDcOXB9COSNNsjHzOZmMU
        vL5chavWiRHfa2g0JKlSgE/WB6UHOCpMjj6zVHxeGMJNOvzpvHmwGXXsmkHECqDLFA4CfDcvR8tGrArg
        qtshyL2IRkGSoAbM3h6qR4hYaT/Bj1HkYJddN2FmYRHxg2LRaQODF6poRuRoQWbdmysDOFduOg+N9yga
        BUk2HtGElpCRg6Ur3fxf7dfIrMqdv3DdbWJafggfrw3g9C2HIPcy7nuSnLttov9cVUoOlk7kkG8/oSOk
        Rz6QQ/hUC9c96ZltDu4+3Nck4YP/2aYQ+QTyKFTrzxRsKXXCsg4S474mycFLBp4lR1xGEJb5xSH4g5HB
        DhzY4L4lCWfxjt8Ysn1NH75Cxc0qxw5ykBz3LUnYF3l5oVyLtBvvF2nunLvlwEEy3JckYUd56zENT02I
        JwgLa5EbnvvDEbFUBcbtm9DPn4V+4hi040eh0T/1c6dhXL8Ks8YXGdmAMAOwAldh1ZTC8u6BVbWDpJj+
        fS+s2jJYwVv0hzZsSjmbzddpT8/cMkX9z7GrhkheveY2RZ5eNsg1SSydLmiPG/rF89BOHkeo9DA0lpO0
        b5cvwKzyAEbuai2kJOEFm70tVO9BLyptPvNj8c7Qve2sGzr0a1cQ2LIetTMmwvvOUFS92BueZzrA06Md
        3PTPqgE9UT38FdRMGAXlq+WCOFYwhw4Y30TB6zBvr4Jx/i0YxzrDOPAQ9JJfQ9/1bzBY9vwG+oE/wjje
        E+bFD2FVbiCuVEUmyB78JzAJNh7RMXlLiC6/IPrPUdB9GouKPrNVvL5UxST62Tel2rcPxPwOVnRSx+aj
        8eKRZETkiiRWIIDQoX1Qls6D7+O3UT2oHzy9O8LVpRXcXVvB82wnVL/6HGrGvAd1zQpx0fFeZwspSa7R
        jfLWF/L0E3bk951vgHjvHYLhqoCyajGq33gZ7qdboLLZH1DZ5PeJpe1jqHq5D2pmToR++kT2t5RRC+vG
        XOhHnoKx+z+gF/4t9G1/nVC07Q8Qaf4LelkvWBVraQ41Mllm8PhNrD2oi9qdjhMT59BxEmunSX68uzqI
        /RcMoVkGzlPReXK8cF1RLHJBEv1UGWrGfQTPc93gavVH+T7VEVf7J1A9+Dki1HzSxjWRWTKDlCQn6X+0
        3xy5P8IJivdqfQebUt5hL8HdoYl0YZNK60fhIY2j5m2kWy3DQ+o/KQ66vvNf6PD/II4MSWX7D2GU/CeM
        c28AZKJlAi5mG72WyZFeFjcHcfrM4rC/hqenyIklS0DNiiShENQNa1A1sBdczR+S70sCcT31BFkKr8Mg
        yyFTSEly8KIu9Ud4Qd/7Sr0nTa3gzu2oTFVzJJKmD6KSbin/sgVC/acDq2onjIN/JK3wN3ICpCxErsK/
        g36sKyzlfGT21HCh3MSbZFbx25fMnE5F+GxwVrbsZzklSSgoTCt3l5bhdZftRypCe1416HkYl9Jbqyik
        JNl5xpAuQKtxfszIT+9gyLC8RMMn6wM5k4U7NLhq5M6lRaZRoGAzqd8n5QsYK2lshrJ4Ds2fiulJtjw5
        4fr+30kOfKywdqkrsjHfiXG8G2mUS5HfkxjsmA9ZmjyLmyXTOqGckUQjDbL2S6EJZGtfV4SGafYQXOIC
        tNk/2lfv0BdFMCZdxJGEtUR+mS5dgLbjFSwipz1bcFmubP5Mpds0P87ekqg38jDZ0WOHTrpwLLR47o5N
        aUxnYUp5h7+Eqlf7w9OvS/gGa26vecrps8H8bwQRbcGernKWHPOnpYdcCJlQevHfC6dd2/sgjMOtoR9q
        Tv/+f2GfpYi0RgLCGGeGktGe2KGvIT9izAb7LG4mBZcqPDNTwSsLVLyxXMHgJQH0na2Qr6HYao5YyQlJ
        aD1D+0sS7hv7Je7ubUhD9EPNqJGo+exjeN8aAndf2jc2p2WXXYtHUDPxE5g+b+QXpYY4kuiGhc2lcpLw
        +8iy3XcfSdqMq0XZtfgb3Si/hep3htqaWG527l5/CerXq2DcuEakihx2OtimuxLBogL4Ph4BV+fm0s+z
        cFRFO3sy/DkZjBqYlz6CVviA/IAX/YQ0zIM0ZhQs32H63d+tr6X7YFUXEwlehc5O+zYik2QOjUwv6/aK
        yKfk2HBYF30DZOvH//2VRQEsIw1/udIUmdhRuGstcWm+8yX5MJOSF8nlgiRmZTl87w+Xrre41Lq0Qs3Y
        D+gC3FvfN6RL0aQ9V75YiqrnupOGeTju8y7ar0BRvggjpwqpJuGHQtkCcPh34Y67jyS8yRzXrwuL1fW6
        L4kIcjOLtYR/4WyxqOK2twFvgrplPaqe7y6dh1W998O/wPL7I5+oCzazdpM2+IX0cOuFP4Vxoi+R4wAz
        IvIZCcwgkTYPxpGW8nlY9vyW+FUR+UB9cDVp16nyA/7E6FqMIZOVfZUEyyBCuyv2aLbzRCVrktBFFdi6
        AZUtH5Gut+fZjlA3r0usDcgEZk0k9kyiUXwjh8G8fTMyODlsfBJd2vmEi5+m5N19JOGNLo0hCduevpGv
        xy0QC/sntXOnwvRWR0YnBvsd7PhzTD5uPr7ZSO0H9+yMjK4DPtxnX5Mf6u0/glHWPT3Hu+YojAR+jXlt
        WmRgfSwhE1m2biwc6q+08ediUUPu6LwifmS2J0q2JLFUlbT7wPh1JnG3fZz8y2+Ev5IMxq0bqH57iFyb
        tHscwR3bU/QnbUhy6JKBDhPjF4Dt1vfXBIVJlg1yTRKudeGqxm9BV2KIDq27vSTUS6aXd8RrwhRLB0Kj
        fLlMfsORresbP4p2JkabhcqhFf+r9EBrO39B2ieBmWYD012AUNHP5HPu+18aUP8A8cPw83Pkh/pp8jVO
        3Yw/1IlQ4TMxbJnaYNEt/fwZWmP5O0jtlHEi4mULMrf4clSWLYB3yAtwka8p9U1IfJ++DzPF9xMpSTgd
        4TmbGpLXlqi4VZXewsZi6W4No9cF0xb+3bLGd1wVefLGdweUU02UJZ9LF8fVuQWC27YIIqUL4/JFcuxf
        ls5bPWQAjJvXIyPDsCrXQrNxuI1LY3lEeGA6MBQYJ/tL59SLfx423erg0GXT1peYVRCCEkz/b2CflZ18
        2ZzZkkRZuUi6vq5mjwhfxQ78yFtLF5W7Wzu42jxmS46osHMv/NAUICXJTSLBe6QxZIvA0Y/dZ+vfmHcK
        m45oIngQ+zc9O0vBebKpo2Cn22tjanleeAam1H9IDisUgn/5AlRINsDTpzNC+3ZFRoZhnhksPczatgdo
        V1Mz9eJBfo6nEFqBxIkv/DGsa1Mj48JYXhISvmTsmnE4/8iVzPaRI2U9pssv0WxJwhGq2LVl4RShuhD5
        WzVeBIvzUUVaQ/aZWHG1eBiuDk3h/eht6MeP0oWThbmlksbmWhFZrLzlWEU0esjW5MoEM/K5ACz+b+IW
        RfwGEIVON7rnhZ7xC9XsIfjGfRgZlRk4MuLqFB/t4hQXddPXkVFh6IeaxB9kEuPgnyIjMoRyDkbJb+Ln
        5kfK0/UP09iNAWnp9cD5qohkZYqRNmlL2ZLE3bN93Nqy+OcQ+TnqSA67fuEsFDJ9OUWlMskrvIt9RjK7
        qgb0Qu3sKcKcSxiyl0BKEkbBCR3tJX4Jy7BlAZEYdyfhJ7Ng2PKAlLjjvwnWa1tkXL0sQrNxC0b+hEKa
        IBtoRw4IrRE7dyU5g/6ViyOjwuD0kbiDTGKSuZQNrMA1GEdaSOb+IYzSpyOjwuAuM7KX9XfokHNz80xh
        1xgkW5JU2PkjdMBD+3ajdtpn8DwjJ1I9ob3mQIuPNJO6fjXM8tuR35A+bEnC7XteWyK/LdjkWX9Ia5C6
        djtwMKG3pEqSHcg1+/V6sX2dfAfhtMUsHD9AqWu/iIzKDFpZKTyScLCrzaMihaIu9F3/LjnIpEnODo2M
        yAxW8KbIGo6f+wcwjraNjApjKDnZsWvG8vHaYMpRLRmWkV8pmzdbkpQ3sXnT6tU+hdd3MoPb/BnVQweK
        8L52cC8sf21k5sxhSxImAN8W/LUIssUYtDiAi5V3xuTiKslZBUFhR8f+HV0mK9h3vr761K9cgovztGIX
        kTXJqiWRUZkhdPSQeI2PndvV9s9QVyyMjArDKPmV5CCTJjn1YmREZrAC10mTtImfm5MfSztGRoXx5gr5
        Rff+mkBWiaoLyByXzZs1SVrJ30eSiat9E/hGvYPA5vXCHEs3ry4RbEnC4LTnvrPlNxHbuRM3B+9Ijfup
        GwYGzJP/HW+QCcYdVeqCoxZV/eMPcmXzh1EzlaNKmSO4qxCerq3j5nZ1agZ13erIqDB08j3iDjKJcbh5
        ZESGUC/A2Pc/8XPz28upAZFBYXAXzaaSrpivLVazMpntGhVmSxJXz3Zxa5tI3L07wD97snDEjcrytF7S
        U0VCkvDr+9Q8zhiNXwyWVqRl+NurGhLsa0zNC0nbn3I/4rmF8QVgHCr0vjlIuqjVg/uJKFVGMA2oq1eg
        sln8AxUXagV3FkYGhmGefC7+IJNohT+nH2ZeD8LVi9r2H8fPXfgAzMv1LwFeH96n2LXjZuenbmYW3WLT
        tu+s+vNFJVuSeEcMjlvbOCFnveqFnghsWCPC7hzyb0gkJAmjyg/0nytfEJYmH9eIyra6PkGuwMU9S3dp
        ts0oWLucuBG/KfxI5J8zRbrAnu5tEdxfEhmZHsxbN+H94E3pvJxox+8odWHdWkqHV/5OYt7MMIDAr/jn
        hkvn1It+RhtWHBkYRuFJHe1tXsjX7Ge/Mn2Tef8FXfrYzJItSTjELltfFvYpvW8PRejAXmJqmpdzBu9i
        USQlCWPXGR1tJbH2qLCm4e9B5GS4XDWHqPRZmFcUQnObBtpt6HacSz6TtLbFMBAsykdlqz/FL3aLh+Ed
        PTL9ajVS45wSIXUeOX+L7GEuEKqHwFVoxT+XHmhj33+T7ZZ+xMWqPQZ9xz9J59R2/Yr+3+vfqux39Joh
        N1UHzOeON7IFtIcSssjp56/5i5+PJVuShF/c5X5J9avPZ6Q1OE9LO3E8Y42TEkkYfGDtnHiWVmT6cMTk
        8GVDhGszBW9CGflCH5It/aRN1iqHNIcuCyRsaaRfPGf7yMThYc785TyhlEC3EDcZYG0hna9zcwTyNkYG
        fwfLUGGc6C090Fyya54dSqZfZWR0cojQ71GJwx4R88K7kZH1MW6Dfe4WB2f46/xSAQdzNh3V0GWKfC6W
        bEnCe+K1yd3idBVOWrUSpabEgNOP+IHS1a0tlJWLw+ZZrt5JYsGmz/R8tm/li8PC4dhnZiiYkR8UXy5a
        nSJxWRN66bzuu2BgZkEQvWfak5GFf36EyJgIvNjKikVwtX5UuuDc9EFdvwZWsm4oXJNC5pld0h0X+rD/
        Y8mSJS0Tljufbv5/lh5qriExzw0T9SYJzQGex3cQBpf9yuZh2f1L23JerrWxswTYr+PMbruvx4iCL6/8
        4xr6zJbPE5VsSSKsgO1bRUhdtt6cTBrY9FVyS4D2jTup+D74y7efdbV9DNVvvYbgrqK0tErKJGGwCcSO
        PJs6sgWKCptI/BUMI1cHMb9IE3Yx+w78Ks4VhCw3SAvwf+M+wotokz5YExDdOexaqkaFmxbsPJ1azy/j
        4nlRQFV3keuKu0db1E4aLR4I2ZyqB3LS9UsXRA6YeNmVfJ7F3fYJkUxpB0tzwzj9qjyNhIWIYpR2gFW+
        kq5q0ir1yEIHLnAZ5tUpMA4+LrSPbA4uBzavTop8Jh68VlPz7JNKW9PFx98IwA0+YnO56KyJHmwcAODL
        KVnFYtYkIZiuSvg+GiFdb5F1zfs2Y4IgQZxWIZKxtlDXLBedUzgVpd7n6VLz9H0a6upltLaphYnTIgnv
        H2eBzqEF4ypF2SLFCpto3aYqIpTMjjZ/bfXLCwMYOJ+r3lR0m6aI3KJki8/CWavbylLvPczhQHXzeri7
        xYdso8LOIL+ge98YBP/08fAvmgv/3KnwvTtcpLa4n3pc+rmo+OfPSpy6HdUCh56QHnAhdMhFzcmBR2Ge
        7AfjwkgY596EcawH9P1/ICKRD8LVi7LPkhhlPcQDYyJwTQmvu2xdWTik34usAH5Xmbo1KHzMOduD4mWe
        G6anut+5IAkfdO3wflE4JVtzkbxImqaqf1eR0c3Zwf4Fs1Aze7Ko7fEM7A13J/sM4AoijsLmdopmW1ok
        iYIT3Fbu0dAphUq1XAl36dhzLv3u9VYwIF5f7dT3t0ILyoQR48jhT6UzB6tyU0khWdLSYVWuI5Po19JD
        /p38IKwtuFy38CfhXKwEZbssxsHHaEOO8C8J/y4bmHTDHbmso/s0+fpGhf09NsFYu3DoONWy3ajkhCQM
        Lprb9LV4f5Kt/bfC+8apLK1pzzhQ04z3zT4DmJNTfZPHwCBtlSoyIkkUx6+ZeJG0g907Si6E5x62TMHF
        ihTVhwxkMygLZ9nWKaQtdBNxczTTl0YmLx1S6/bySD5X4oOfXOjz/HB44BHyheqnxicCm057zxroNV1N
        SXPbiei08on8gswZSRhkCfhXLYK7iyR7IhNp9QhqPn0PptsV+QWpISuSMNihW7wrhGdnhhsJPJmj73Ln
        aBn3/lq0MwhPEqcyVXD/Jlev9qJISrqIyYS0C0fGaj+fLtpsZgLLUwBt/6Mwin4qOfwpSvE/QC/tAqvm
        cGTW1MGm6l7yPbjPc8sMLjd+H+EM8Q42De1yShKC6HazdYMoxY3zL1IV0h7u7uTHzJpM++aJzJw6siYJ
        g30VdsSXElmGLVfRg/yM5mPSJwvH3rnp2aBFKmZtD9WrEckJ6CoVnQDHfiicNzavpIsaK7zIXVvD987r
        CGzbknG8PQoO5fKDoLH/92Rayd9RpLLjH8m8+jM56RPJHEndXJDh7C0DEzYFRICliU2oPSpRE+z5eQrW
        HdJEvXuP6TKSxJdRM7IhSRTcq9k35v2M9q16xBDR1CPTTIuckCQKjqJw5KqEVDp3VRm7MSj6PPFGdJwU
        LvRpSgvZZFQtWoxV0GECt7BRBSn4C0U5aY6jXUy4hoRFfoRWegj+JZ/DR44e1xqIlqekYSqefJDs1ofg
        6tBEbIh3xKsiNyhQXJC2mk4Mcuhrjoq6dPPk8yLPy9j9S2iFP4W27UdCuNKQkySNw01hnhkE88Z8kbeV
        KwQ0iHeteUVBvE0Oep/ZirAG2A/hvgEcUOlN+8M/4zr5UzfCnVT4XYX7BceSpAVdcrENORhl7nOYe+KL
        OPnqQh5uK6mvKR9y7Sjt27L5wtzlfeNEViZNBZGiotkfROMPEYgR+zZJPCpbabYQikVOSVIXrNb5xuHw
        Ib9p8Kv99hMa8o/pyDumYRuRYdcZQ3xR0Bm61cq9FrTc56YlBC+6eI0tK0VwdzHUgs1Qt26EmveNaPwQ
        OnIA+pWLOc0ojYNl0N9RToQ5CNO1GWb5FzBvLQ1LxWpY7jzRbV701aoXHs4dODWFk0S5UrH4tIG84zq2
        khSe1ESJAv+sbsCEMytkXVM4PF+3jLqhYGmaqA8R+1ayQ2h3bj3LGRHc4CF0OLJvOcrpajCSOLh/wVnZ
        3LAuliQcgTxf3vAkudNwSNIIweYSF9Wlmo4SC/42ZlmvAS5baGhT+fuAQ5JGALbS2JfgjIkv9mnoSzd+
        hwl+4Y+ke6TZJH53NbcUinf2uaTBqzgkcXAP4iz5hVO2BuNaC721Kr06dw7McDN1WWSLX+w5+dHIVRr4
        XQSHJI0AY2yygDnKOGlLgDRMcqJwcxxuhWrXjINTV2Rf4HM/wCFJIwBHGO0a1PEbyYdfBcQDoz8g1wI+
        NVy8NXylPAGVsyImbQ5m/d2KdysckjQCsE+yokQTb1SxB5yFNQNnYI9ZH8Tq/ZoIA5ecM7DthCHeR95f
        o6LXTPtUFv56hoMX708twnBI0kjADvW4jfbfT8LCGQ+cbsIPhT1nqOItJFyHYv8i326CItKSgnf4jetO
        wiFJIwJXcr63xj5dPl3h3gP8xUC1d6BjzvcJhySNDBU+1iiBjJIb6wp/fjz5IXc6S+L7gEOSRgifaomi
        qr5zVJG4KCOBnXA+V7854Q6eDZQlc9fBIUkjBT9ncHrJ9PwgBi0KCD+EyxPiiEEmFSc9ciIqNyZfsCMo
        Xuvvw+cQWzgkaeRgbcC9B3afMbB6nya+MWBaXki8ns8sCGHhzhA2HNJx4IIhTLX78bEwGRySOKgH3YRo
        BsFvHpxK3/goEQ+HJA4cJIFDEgcOksAhiQMHSeCQxIGDJHBI4sBBEjgkceAgIYD/B6rXw5Ye1t2aAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>